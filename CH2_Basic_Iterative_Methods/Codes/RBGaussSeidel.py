# =========================================================================
# -------------------------------------------------------------------------
# Red-Black Gauss-Seidel
# =========================================================================


def RB_GaussSeidel(A, v0, b, Niter):

    import numpy as np

    N = len(v0)
    Ad = np.diag(A)
    Ap = A - np.diag(Ad)

    for k in range(1, Niter+1):
        for i in range(0, N, 2):
            v0[i] = (b[i] - np.dot(Ap[i, :], v0)) / Ad[i]
        for i in range(1, N, 2):
            v0[i] = (b[i] - np.dot(Ap[i, :], v0)) / Ad[i]

    return v0[:]

# -------------------------------------------------------------------------
# =========================================================================
